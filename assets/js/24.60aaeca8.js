(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{378:function(e,t,a){"use strict";a.r(t);var s=a(42),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"about-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about-variables"}},[e._v("#")]),e._v(" About Variables")]),e._v(" "),a("p",[e._v("In this section we will explain CpExtra's "),a("strong",[e._v("Command Variables")]),e._v(", "),a("strong",[e._v("Preference Variables")]),e._v(" and "),a("strong",[e._v("Info Variables")]),e._v(".")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("About variable prefixes")]),e._v(" "),a("p",[e._v("Some CpExtra features allow you to create variables with special abilities by giving them a special prefex. For example, variables with the prefix "),a("em",[e._v("ls_")]),e._v(" save their values to local storage in the user's browser.\nWe discuss those features under the "),a("strong",[e._v("Features")]),e._v(" page.")])]),e._v(" "),a("h2",{attrs:{id:"variable-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-types"}},[e._v("#")]),e._v(" Variable types")]),e._v(" "),a("p",[e._v("All CpExtra variables belong to one of the following three types:")]),e._v(" "),a("ul",[a("li",[e._v("Command Variables")]),e._v(" "),a("li",[e._v("Preference Variables")]),e._v(" "),a("li",[e._v("Info Variables")])]),e._v(" "),a("h3",{attrs:{id:"command-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-variables"}},[e._v("#")]),e._v(" Command Variables")]),e._v(" "),a("p",[e._v("These are the most frequently used variable type. Each variable represents an 'action' or 'command'. When you assign a value to these variables, CpExtra reads that value and acts upon it.")]),e._v(" "),a("p",[e._v("For example, if you assign "),a("strong",[e._v("xcmndHide")]),e._v(" with "),a("strong",[e._v("SmartShape_1")]),e._v(" CpExtra will search the project for an object name "),a("strong",[e._v("SmartShape_1")]),e._v(" and hide that object.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/define-xcmndhide.png"),alt:"defining xcmndHide"}}),e._v(" "),a("p",[e._v("Examples of commonly used command variables include:")]),e._v(" "),a("ul",[a("li",[e._v("xcmndHide")]),e._v(" "),a("li",[e._v("xcmndShow")]),e._v(" "),a("li",[e._v("xcmndAddEventListener")]),e._v(" "),a("li",[e._v("xcmndScore")])]),e._v(" "),a("h3",{attrs:{id:"preference-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preference-variables"}},[e._v("#")]),e._v(" Preference Variables")]),e._v(" "),a("p",[e._v("Preferences are behaviors you want to persist for the whole project. Usually, you'll set them once and forget about them. That said, you can change them again once they are set.")]),e._v(" "),a("p",[e._v("Usually you'll give a preference variable its initial value in the "),a("strong",[e._v("Project > Variables...")]),e._v(" dialog.")]),e._v(" "),a("p",[e._v("Examples of commonly used command variables include:")]),e._v(" "),a("ul",[a("li",[e._v("xprefDisablePlaybarScrubbing")]),e._v(" "),a("li",[e._v("xprefInitAction")])]),e._v(" "),a("h3",{attrs:{id:"info-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#info-variables"}},[e._v("#")]),e._v(" Info Variables")]),e._v(" "),a("p",[e._v("CpExtra exposes information through these variable's values. Much like how Captivate exposes the number of the current slide through the "),a("strong",[e._v("cpInfoCurrentSlide")]),e._v(" system variable. These variables are READ-ONLY and their values cannot be changed.")]),e._v(" "),a("p",[e._v("Commonly used info variables include:")]),e._v(" "),a("ul",[a("li",[e._v("xinfoEventTarget")]),e._v(" "),a("li",[e._v("xinfoProjectElapsedMinutes")]),e._v(" "),a("li",[e._v("xinfoProjectElapsedSeconds")])]),e._v(" "),a("h2",{attrs:{id:"how-do-you-create-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-create-variables"}},[e._v("#")]),e._v(" How do you create variables?")]),e._v(" "),a("p",[e._v("To use a CpExtra command, preference or info variable you must first define it.")]),e._v(" "),a("p",[e._v("For example, "),a("em",[e._v("xcmndHide")]),e._v(" is probably CpExtra's most frequently used command variable.\nTo define it in Captivate:")]),e._v(" "),a("ol",[a("li",[e._v("Go to "),a("strong",[e._v("Project > Variables...")])]),e._v(" "),a("li",[e._v("Click: "),a("strong",[e._v("Add New")])]),e._v(" "),a("li",[e._v("Write the name of the variable (in this example: "),a("strong",[e._v("xcmndHide")]),e._v(")")])]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/assign-xcmndhide.png"),alt:"assigning to xcmndHide"}}),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("If you're defining a preference variable, you'll probably want to give it an initial value in the "),a("strong",[e._v("Value:")]),e._v(" field. For other variable types, giving the variable an initial value will not cause any behaviour.")])]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("All variables are "),a("em",[e._v("case sensitive")]),e._v(". "),a("strong",[e._v("xcmndhide")]),e._v(" is not the same variable as "),a("strong",[e._v("xcmndHide")]),e._v(". CpExtra ignores variables with incorrect capitalisation.")])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("All CpExtra variables start with the letter "),a("strong",[e._v("x")]),e._v(" (for e"),a("strong",[e._v("X")]),e._v("tra). Therefore, when picking a variable from a drop down list the CpExtra variables will appear down the bottom.")]),e._v(" "),a("p",[e._v("Let's say however that there is a particular CpExtra variable you use all the time and you'd like the convenience of it appearing at the "),a("em",[e._v("top")]),e._v(" of the variable list.\nIn that case, define the CpExtra variable with an underscore character like this '_' in front of its name. For example: "),a("strong",[e._v("_xcmndHide")]),e._v("\nCpExtra will still recognize it, and it will conveniently sort to the top of your list of variables.")])]),e._v(" "),a("h2",{attrs:{id:"interacting-with-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interacting-with-variables"}},[e._v("#")]),e._v(" Interacting with variables")]),e._v(" "),a("p",[e._v("By making "),a("strong",[e._v("assignments")]),e._v(" to variables, you inform CpExtra of what action you desire it to take.")]),e._v(" "),a("p",[e._v("Assignments can be made through actions or advanced actions.")]),e._v(" "),a("h3",{attrs:{id:"actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#actions"}},[e._v("#")]),e._v(" Actions")]),e._v(" "),a("p",[e._v("When in Captivate you add a button and configure what happens when it is clicked you pick from a list of "),a("em",[e._v("actions")]),e._v(". They include things such as:")]),e._v(" "),a("ul",[a("li",[e._v("Continue")]),e._v(" "),a("li",[e._v("Go To The Previous Slide")]),e._v(" "),a("li",[e._v("Go To The Next Slide")]),e._v(" "),a("li",[e._v("Jump To Slide")]),e._v(" "),a("li",[e._v("and so on...")])]),e._v(" "),a("p",[e._v("When you to trigger one of CpExtra's commands, you would pick the "),a("strong",[e._v("Assign")]),e._v(" action.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/action-assign.png"),alt:"defining xcmndHide"}}),e._v(" "),a("p",[e._v("From the "),a("strong",[e._v("Assign:")]),e._v(" drop-down select a CpExtra variable (that you would already have defined under "),a("strong",[e._v("Project > Variables")]),e._v("). Then in the "),a("strong",[e._v("With:")]),e._v(" field enter your instruction to CpExtra.")]),e._v(" "),a("p",[e._v("For example, if you wanted to hide all the objects in the project who's name starts with "),a("strong",[e._v("SmartShape_")]),e._v(", you'd open the "),a("strong",[e._v("Assign:")]),e._v(" drop down an pick "),a("strong",[e._v("xcmndHide")]),e._v(", then in the "),a("strong",[e._v("With:")]),e._v(" field enter the text string "),a("strong",[e._v("SmartShape_#")]),e._v(".")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/action-assign-xcmndhide.png"),alt:"defining xcmndHide"}}),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("For the sake of simplicity of writing this document, whenever we refer to an assignment to a variable, we will write it out using the format below:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | <VARIABLE> with <VALUE>\n")])])]),a("p",[e._v("For example, the assignment pictured above would be written out:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | xcmndHide with SmartShape_#\n")])])])]),e._v(" "),a("h3",{attrs:{id:"advanced-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-actions"}},[e._v("#")]),e._v(" Advanced Actions")]),e._v(" "),a("p",[e._v("Sometimes to get the behaviour you require, you need more than one action. This is where you define an "),a("strong",[e._v("Advanced Action")]),e._v(". These allow you to trigger a series of actions one after the other. The actions you can trigger are the kind you can trigger on a button's "),a("strong",[e._v("Success")]),e._v(" action.")]),e._v(" "),a("p",[e._v("The "),a("strong",[e._v("Assign")]),e._v(" action is probably the easiest way to give a variable its value. The "),a("strong",[e._v("Expression")]),e._v(" action might sometimes also prove to be useful, but it's a little more complicated so in this documentation we will always use "),a("strong",[e._v("Assign")]),e._v(".")]),e._v(" "),a("p",[e._v("The "),a("strong",[e._v("Assign")]),e._v(" action works differently in an "),a("strong",[e._v("Advanced Action")]),e._v(" than it does in single actions that can be selected from the "),a("strong",[e._v("Properties")]),e._v(" panel. In the "),a("strong",[e._v("Advanced Actions")]),e._v(" dialog, after picking the "),a("strong",[e._v("Assign")]),e._v(" action a drop down will appear allowing you to choose the name of the variable that will receive the assignment. After picking that variable the next drop down will allow you to choose what value to assign. However, you will first be faced with a choice: Assign the value of another "),a("strong",[e._v("variable")]),e._v(" or a "),a("strong",[e._v("literal")]),e._v(" value.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/advanced-action-variable-literal.png"),alt:"defining xcmndHide"}}),e._v(" "),a("p",[e._v("Choosing "),a("strong",[e._v("variable")]),e._v(" will present you with another list of variables to choose from. When this action is run, Captivate will read the value of this variable, and assign it to the original variable.")]),e._v(" "),a("p",[e._v("Choosing "),a("strong",[e._v("literal")]),e._v(" will present you with a field where you can enter a string of text.")]),e._v(" "),a("p",[e._v("While you may at some times have reason to use the "),a("strong",[e._v("variable")]),e._v(" option, we find that 99% of the time we write our instructions in "),a("strong",[e._v("literals")]),e._v(". So, in this documentation we will assume you are always making literal assignments.")]),e._v(" "),a("p",[e._v("This being the case, if you were to convert the following into an "),a("strong",[e._v("Advanced Action")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | xcmndHide with SmartShape_#\n")])])]),a("p",[e._v("From this drop down you would choose: "),a("strong",[e._v("literal")])]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/advanced-action-variable-literal.png"),alt:"defining xcmndHide"}}),e._v(" "),a("p",[e._v("Then type "),a("strong",[e._v("SmartShape_#")]),e._v(" into the field.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/advanced-action-assign-xcmndhide.png"),alt:"defining xcmndHide"}}),e._v(" "),a("p",[e._v("Tap "),a("strong",[e._v("ENTER")]),e._v(" and you're done!")]),e._v(" "),a("h2",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[e._v("#")]),e._v(" Data types")]),e._v(" "),a("p",[e._v("Data comes in different types. For example:")]),e._v(" "),a("ul",[a("li",[e._v("Numbers")]),e._v(" "),a("li",[e._v("Strings (A fancy way of saying: Letters and words!)")]),e._v(" "),a("li",[e._v("Boolean (yes or no)")])]),e._v(" "),a("p",[e._v("Usually an action only makes sense if applied to a particular data type.")]),e._v(" "),a("p",[e._v("For example: "),a("strong",[e._v("xcmndRound")]),e._v(" takes a number like "),a("strong",[e._v("3.456")]),e._v(" and rounds it to the nearest number: "),a("strong",[e._v("3")]),e._v(". Would it make sense to try and round a string such as 'french fries' to it's nearest number? No, the data type is wrong (and you can never have too many french fries).")]),e._v(" "),a("p",[e._v("Usually this is not something you need to worry about as CpExtra will imply the data type from what you write. But it is still good to know a little about data types.")]),e._v(" "),a("h3",{attrs:{id:"numbers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numbers"}},[e._v("#")]),e._v(" Numbers")]),e._v(" "),a("p",[e._v("This counts as whole numbers (like: 2, 4, 53, 1800) and floating point numbers (1.2, 333.3333, 3.14).")]),e._v(" "),a("p",[e._v("However, if you're writing numbers higher than a thousand "),a("strong",[e._v("do not")]),e._v(" include commas like: 1,234,567. Remove the commas instead: 1234567")]),e._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[e._v("#")]),e._v(" String")]),e._v(" "),a("p",[e._v("Note that when making an assignment to a command variable, CpExtra will remove all space characters. So something like:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/xcmndalert-with-spaces.png"),alt:"assign xcmndAlert with Hello World! How Are You!"}}),e._v(" "),a("p",[e._v("Will effectively become:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/xcmndalert-no-spaces.png"),alt:"assign xcmndAlert with HelloWorld!HowAreYou!"}}),e._v(" "),a("p",[e._v("To get around this, use square brackets [].\n"),a("RouterLink",{attrs:{to:"/variables/special-behaviour.html#for-string-values"}},[e._v("See this page for more information.")])],1),e._v(" "),a("h3",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[e._v("#")]),e._v(" Boolean")]),e._v(" "),a("p",[e._v("A "),a("em",[e._v("positive")]),e._v(" boolean value can be written out in several ways:")]),e._v(" "),a("ul",[a("li",[e._v("true")]),e._v(" "),a("li",[e._v("yes")]),e._v(" "),a("li",[e._v("1")])]),e._v(" "),a("p",[e._v("A "),a("em",[e._v("negative")]),e._v(" boolean value can be written as follows:")]),e._v(" "),a("ul",[a("li",[e._v("false")]),e._v(" "),a("li",[e._v("no")]),e._v(" "),a("li",[e._v("0")])]),e._v(" "),a("p",[e._v("All are equally valid.")]),e._v(" "),a("h2",{attrs:{id:"get-and-set-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-and-set-mode"}},[e._v("#")]),e._v(" Get and set mode")]),e._v(" "),a("p",[e._v("Certain command variables have GET and SET modes. These variables include:")]),e._v(" "),a("ul",[a("li",[e._v("xcmndScore (relating to an object's score in the quiz)")]),e._v(" "),a("li",[e._v("xcmndPosX (relating to an object's horizontal position on the slide)")]),e._v(" "),a("li",[e._v("xcmndPosY (relating to an object's vertical position on the slide)")])]),e._v(" "),a("p",[e._v("These variables have something in common. Sometimes you want to READ (or "),a("strong",[e._v("get")]),e._v(")an object's score/x position/y position to help you make calculations. Other times you want to WRITE (or "),a("strong",[e._v("set")]),e._v(") an object's score/x position/y position.")]),e._v(" "),a("p",[e._v("For example, let's say you had two slide objects:")]),e._v(" "),a("ul",[a("li",[e._v("SmartShape_1")]),e._v(" "),a("li",[e._v("SmartShape_2")])]),e._v(" "),a("img",{attrs:{src:e.$withBase("/img/get-set-smartshape.png"),alt:"SmartShape_1 SmartShape_2"}}),e._v(" "),a("p",[e._v("We also have a variable called: "),a("strong",[e._v("MyVar")])]),e._v(" "),a("p",[e._v("You want to move "),a("strong",[e._v("SmartShape_1")]),e._v(" over to the right so that it has the same x position (horizontal position) as "),a("strong",[e._v("SmartShape_2")]),e._v(". You can do all this with the "),a("strong",[e._v("xcmndPosX")]),e._v(" variable in the following way:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | xcmndPosX with MyVar, SmartShape_2\nAssign | xcmndPosX with SmartShape_1, MyVar\n")])])]),a("p",[e._v("Here's what these two lines of code are doing:")]),e._v(" "),a("ol",[a("li",[e._v("Get "),a("strong",[e._v("SmartShape_2")]),e._v("'s current x position and save it into the variable "),a("strong",[e._v("MyVar")]),e._v(".")]),e._v(" "),a("li",[e._v("Set "),a("strong",[e._v("SmartShape_1")]),e._v("'s x position to be equal to "),a("strong",[e._v("MyVar")]),e._v(".")])]),e._v(" "),a("p",[e._v("The first line shows "),a("strong",[e._v("xcmndPosX")]),e._v(" in "),a("em",[e._v("get")]),e._v(" mode. The second shows "),a("strong",[e._v("xcmndPosX")]),e._v(" in "),a("em",[e._v("set")]),e._v(" mode.")]),e._v(" "),a("p",[e._v("How does "),a("strong",[e._v("xcmndPosX")]),e._v(" know whether to use "),a("em",[e._v("get")]),e._v(" or "),a("em",[e._v("set")]),e._v(" mode? By detecting what "),a("strong",[e._v("data types")]),e._v(" have been assigned to which "),a("strong",[e._v("parameters")])]),e._v(" "),a("p",[a("strong",[e._v("Get mode")]),e._v(" is used if...")]),e._v(" "),a("ul",[a("li",[e._v("Parameter 1 is a variable")]),e._v(" "),a("li",[e._v("Parameter 2 is a slide object")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | xcmndPosX with MyVar, SmartShape_2\n")])])]),a("p",[a("strong",[e._v("Set mode")]),e._v(" is used if...")]),e._v(" "),a("ul",[a("li",[e._v("Parameter 1 is a slide object")]),e._v(" "),a("li",[e._v("Parameter 2 is a variable")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Assign | xcmndPosX with SmartShape_1, MyVar\n")])])]),a("p",[e._v("The modes become easier to understand if we imagine an equals sign between the parameters. If I wrote:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("MyVar = SmartShape_2's x position.\n")])])]),a("p",[e._v("We'd expect "),a("strong",[e._v("SmartShape_2")]),e._v("'s x position to be recorded in our "),a("strong",[e._v("MyVar")]),e._v(" variable. A get operation.")]),e._v(" "),a("p",[e._v("However, if I wrote:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SmartShape_1's x position = MyVar\n")])])]),a("p",[e._v("We'd expect "),a("strong",[e._v("SmartShape_1")]),e._v("'s x position to "),a("em",[e._v("change")]),e._v(", becoming equal to "),a("strong",[e._v("MyVar")]),e._v(". This is how a set operation works.")])])}),[],!1,null,null,null);t.default=i.exports}}]);